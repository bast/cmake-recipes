find_package(message 1 CONFIG QUIET)
if(message_FOUND)
  get_property(_loc TARGET message::message-shared PROPERTY LOCATION)
  message(STATUS "Found message: ${_loc} (found version ${message_VERSION})")
  add_library(message_external INTERFACE) # dummy
else()
  include(ExternalProject)
  message(STATUS
            "Suitable message could not be located, Building message instead.")
  ExternalProject_Add(message_external
                      GIT_REPOSITORY
                      https://github.com/robertodr/message.git
                      GIT_TAG
                      master
                      UPDATE_COMMAND
                      ""
                      CMAKE_ARGS
                      -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}
                      -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
                      -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
                      -DCMAKE_INSTALL_LIBDIR=${CMAKE_INSTALL_LIBDIR}
                      -DCMAKE_INSTALL_BINDIR=${CMAKE_INSTALL_BINDIR}
                      -DCMAKE_INSTALL_DATADIR=${CMAKE_INSTALL_DATADIR}
                      -DCMAKE_INSTALL_INCLUDEDIR=${CMAKE_INSTALL_INCLUDEDIR}
                      CMAKE_CACHE_ARGS
                      -DCMAKE_CXX_FLAGS:STRING=${CMAKE_CXX_FLAGS}
                      INSTALL_COMMAND
                      DESTDIR=${CMAKE_BINARY_DIR}/stage
                      ${CMAKE_MAKE_PROGRAM}
                      install)
  set(message_DIR
      ${STAGED_INSTALL_PREFIX}/${CMAKE_INSTALL_DATADIR}/cmake/message
      CACHE PATH "Path to internally built messageConfig.cmake"
      FORCE)
endif()
